As part of an attempt to learn how to use linux and the terminal window on the mac, I have created  the following script. This is my first linux project so please forgive any obvious errors. The aim of the scripts is to help the good people at flo_culture to analyse feedback from course that they ran. The plan is for the script to analyse the language used within the feedback and to identify any trends. 

######## version 7 : is an improved version of version 6  ########
this version is intended to tidy up the layout of version 6 a little. It will take a number of text files from a folder called group1 and compare them to a set of responses from a folder called group 2, converting them into a single documents, extracting the keywords and showing how many times each  word was used.
The folders containing the text files should be named groupa and groupb and they should be stored on the desktop. A dictionary file named words.txt should also be stored on the desktop and the results will be put on the desktop in a file called lexion5.txt
################## paste into terminal ###################

group1=$HOME/Desktop/group1
allgroup1=$HOME/Desktop/allgroup1.tmp
group1sorted=$HOME/Desktop/group1sorted.tmp
group2=$HOME/Desktop/group2
allgroup2=$HOME/Desktop/allgroup2.tmp
group2sorted=$HOME/Desktop/group2sorted.tmp
allgroups=$HOME/Desktop/allgroups.tmp
desktop=$HOME/Desktop
results=$HOME/Desktop/Lexion5.txt
tempresults=$HOME/Desktop/Lexion5.tmp
words=$HOME/Desktop/words.txt
density=50

cd $group1
for file in * ; do 
   cat $file >> $allgroup1
   echo "" >> $allgroup1
done

cd $group2
for file in * ; do 
   cat $file >> $allgroup2
   echo "" >> $allgroup2
done

cat $allgroup1 $allgroup1 > $allgroups

echo "Text Analysis" >$results
echo "Date created ;"; $date >>$results
echo "" >>$results
echo "*****************************************************" >>$results
echo "                       Group 1" >>$results
echo "*****************************************************" >>$results
echo "" >>$results
echo "Document count = " $(ls | wc -l) "">>$results
echo "Total word count = " $(tr 'A-Z' 'a-z' <$allgroup1 | tr -cs 'a-z' '\n' | sort | wc -l) "" >>$results
echo "Unique word count = " $(tr 'A-Z' 'a-z' <$allgroup1 | tr -cs 'a-z' '\n' | sort | uniq | wc -l) >>$results
tr 'A-Z' 'a-z' <$allgroup1 | tr -cs 'a-z' '\n'|sort |uniq| sort >$group1sorted
tr 'A-Z' 'a-z' <$allgroup2 | tr -cs 'a-z' '\n'|sort |uniq| sort >$group2sorted
echo "Interesting word count = " $(tr 'A-Z' 'a-z' <$allgroup1 | tr -cs 'a-z' '\n' | sort | uniq | comm -23 - $words | wc -l) >>$results
echo "Words unique to Group" >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -23 - $group2sorted | wc -l >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -23 - $group2sorted |sort >$tempresults
awk '{printf("%s", $0 (NR==0 ? "" : ", "))}' $tempresults >>$results
echo "" >>$results
echo "" >>$results
echo "Words density" >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$allgroup1 | tr -cs 'a-z' '\n' | sort | uniq -c|sort -nr >$tempresults
head -n $density $tempresults >>$results
echo "" >>$results

cd $group2

echo "" >>$results
echo "*****************************************************" >>$results
echo "                       Group 2" >>$results
echo "*****************************************************" >>$results
echo "" >>$results

echo "Document count" >>$results
ls | wc -l >>$results
echo "" >>$results
echo "Total word count" >>$results
tr 'A-Z' 'a-z' <$allgroup2 | tr -cs 'a-z' '\n' | sort | wc -l >>$results
echo "" >>$results
echo "Unique word count">>$results
tr 'A-Z' 'a-z' <$allgroup2 | tr -cs 'a-z' '\n' | sort | uniq | wc -l >>$results
echo "" >>$results
echo "Interesting word count">>$results
tr 'A-Z' 'a-z' <$allgroup2 | tr -cs 'a-z' '\n' | sort | uniq | comm -23 - $words | wc -l >>$results
echo "" >>$results
echo "Words unique to group" >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -13 - $group2sorted| wc -l >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -13 - $group2sorted  |sort>$tempresults
awk '{printf("%s", $0 (NR==0 ? "" : ", "))}' $tempresults >>$results
echo "" >>$results
echo "" >>$results
echo "Words density" >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$allgroup2 | tr -cs 'a-z' '\n' | sort | uniq -c|sort -nr >$tempresults
head -n $density $tempresults >>$results
echo "" >>$results


echo "" >>$results
echo "*****************************************************" >>$results
echo "                    Groups 1 and 2" >>$results
echo "*****************************************************" >>$results
echo "" >>$results 

echo "" >>$results
echo "Words used by both groups " >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -12 - $group2sorted | wc -l >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$group1sorted | tr -cs 'a-z' '\n' | sort | uniq | comm -12 - $group2sorted |sort>$tempresults
awk '{printf("%s", $0 (NR==0 ? "" : ", "))}' $tempresults >>$results
echo "" >>$results
echo "" >>$results
echo "" >>$results
echo "Words density" >>$results
echo "" >>$results
tr 'A-Z' 'a-z' <$allgroups | tr -cs 'a-z' '\n' | sort | uniq -c|sort -nr >$tempresults
head -n $density $tempresults >>$results
echo "" >>$results

cd $desktop

rm $allgroup1 
rm $allgroup2
rm $allgroups
rm $group1sorted
rm $group2sorted
rm $tempresults
echo done


################## Footnotes ##################

possible applications - 
comparing feedback notes from a group of students to a group of teachers
comparing the feedback from 2 groups of students from different areas
comparing 2 documents for similarities
comparing feedback from 2 different social media channels